name: CI/CD for Blood Donation App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Docker Compose
    - name: Set up Docker Compose
      run: |
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verify the installation

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Cache Docker layers
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    # Build Docker images
    - name: Build user-service Docker image
      run: |
        docker build -t user-service ./user-service

    - name: Build donor-service Docker image
      run: |
        docker build -t donor-service ./donor-service

    - name: Build MySQL Docker image
      run: |
        docker build -t mysql-db ./database

    # Run containers with Docker Compose
    - name: Run containers with Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d

    # Wait for MySQL and other services to be ready
    - name: Wait for services to be ready
      run: |
        retries=30
        until curl --silent --fail http://localhost:4000/test-endpoint || [ $retries -eq 0 ]; do
          echo "Waiting for user-service to be ready..."
          sleep 5
          retries=$((retries-1))
        done
        if [ $retries -eq 0 ]; then
          echo "user-service is not ready after 30 attempts, failing..."
          exit 1
        fi

        retries=30
        until curl --silent --fail http://localhost:5001/test-endpoint || [ $retries -eq 0 ]; do
          echo "Waiting for donor-service to be ready..."
          sleep 5
          retries=$((retries-1))
        done
        if [ $retries -eq 0 ]; then
          echo "donor-service is not ready after 30 attempts, failing..."
          exit 1
        fi

    # Run tests
    - name: Run tests
      run: |
        curl http://localhost:4000/test-endpoint # Example test for user-service
        curl http://localhost:5001/test-endpoint # Example test for donor-service

    # Shut down containers
    - name: Shut down containers
      run: |
        docker-compose down

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Push Docker images to Docker Hub
    - name: Push Docker images to Docker Hub
      run: |
        docker push user-service
        docker push donor-service
        docker push mysql-db

env:
  DB_HOST: mysql
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_PORT: 3306
