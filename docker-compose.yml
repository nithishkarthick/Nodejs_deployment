version: '3.8'

networks:
  blood-donation-network:
    driver: bridge

services:
  donor-service:
    build: ./donor-service
    container_name: donor_service
    ports:
      - "5001:5001"
    entrypoint: ["/usr/local/bin/wait-for-it.sh", "mysql:3306", "--", "npm", "start"]
    depends_on:
      - mysql
    env_file:
      - ./donor-service/.env
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=blood_donation_db
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh  # Correct path here
    command: ["sh", "-c", "chmod +x /usr/local/bin/wait-for-it.sh && /usr/local/bin/wait-for-it.sh ...", "until mysql -h mysql -u root -proot -e 'SELECT 1'; do echo 'Waiting for MySQL...'; sleep 5; done; ./start-service.sh", "node", "index.js"]
    networks:
      - blood-donation-network

  user-service:
    build: ./user-service
    container_name: user_service
    restart: always
    entrypoint: ["/usr/local/bin/wait-for-it.sh", "mysql:3306", "--", "npm", "start"]
    depends_on:
      - mysql
    ports:
      - "4001:4001"
    env_file:
      - ./user-service/.env
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh  # Correct path here
    command: ["sh", "-c", "chmod +x /usr/local/bin/wait-for-it.sh && /usr/local/bin/wait-for-it.sh ...", "until mysql -h mysql -u root -proot -e 'SELECT 1'; do echo 'Waiting for MySQL...'; sleep 5; done; ./start-service.sh", "node", "index.js"]
    networks:
      - blood-donation-network

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "6000:6000"
    depends_on:
      - mysql
    entrypoint: ["/usr/local/bin/wait-for-it.sh", "mysql:3306", "--", "npm", "start"]
    command: ["sh", "-c", "chmod +x /usr/local/bin/wait-for-it.sh && /usr/local/bin/wait-for-it.sh ...", "until mysql -h mysql -u root -proot -e 'SELECT 1'; do echo 'Waiting for MySQL...'; sleep 5; done; ./start-service.sh"]
    env_file:
      - ./notification-service/.env
    networks:
      - blood-donation-network
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=blood_donation_app

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - donor-service
    env_file:
      - ./api-gateway/.env
    environment:
      - JWT_SECRET=your_jwt_secret_key
    networks:
      - blood-donation-network

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - blood-donation-network
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: blood_donation_db
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - blood-donation-network

volumes:
  mysql_data: {}
