version: '3.8'

networks:
  blood-donation-network:
    driver: bridge

services:
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "4000:4000"
    depends_on:
      - mysql 
    command: ["sh", "-c", "until mysqladmin ping -h mysql --silent; do echo 'Waiting for MySQL...'; sleep 2; done; ./start-service.sh"]

    env_file:
      - ./user-service/.env
    networks:
      - blood-donation-network  

  donor-service:
    build: ./donor-service
    container_name: donor-service
    ports:
      - "5001:5001"
    depends_on:
      - mysql
    env_file:
      - ./donor-service/.env
    networks:
      - blood-donation-network  

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "6000:6000"
    depends_on:
      - mysql
    env_file:
      - ./notification-service/.env
    networks:
      - blood-donation-network

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - user-service
      - donor-service
      - notification-service
    networks:
      - blood-donation-network

  frontend:
    build: ./frontend  # Path to your frontend directory
    container_name: frontend
    ports:
      - "8080:80"  # Exposing the frontend on port 8080
    volumes:
      - ./frontend/assets:/usr/share/nginx/html/assets  # Mount assets folder into the container
    networks:
      - blood-donation-network

  mysql:
    build: ./database # Build MySQL image from Dockerfile in ./database
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      DB_HOST: mysql      # service name of MySQL container
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: blood_donation_app # Ensure this DB is created on startup
     healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p$DB_PASSWORD"]
      interval: 10s
      retries: 20
      start_period: 30s
      timeout: 10s
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount init.sql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql  # Mount schema.sql
    networks:
      - blood-donation-network

volumes:
  mysql_data: {}  # Persistent storage for MySQL data
